"use strict";(self.webpackChunkpure=self.webpackChunkpure||[]).push([[94],{3828:function(e,t,n){n.r(t);var r,l,s,o,a=n(5276),i=n(6540),u=n(6225),c=n(3454),m=n(3821),p=n(5353),h=n(5225),d="Tools",g="Write, manipulate, and do more with CSS.";t.default=function(){return i.createElement(u.A,{description:g,title:d},i.createElement(c.A,{description:g,title:d}),i.createElement("div",{className:"content"},i.createElement(p.A,{heading:"Installing Pure with npm"}),i.createElement("p",null,"You can add Pure to your project through ",i.createElement("a",{href:"https://www.npmjs.com/"},"npm"),". This is our recommended way to to integrate Pure into your project's build process and tool chain."),i.createElement(m.A,null,"$ npm install purecss --save"),i.createElement("p",null,i.createElement("code",null,"require('purecss')")," will load an object with the following methods:"),i.createElement("ul",null,i.createElement("li",null,i.createElement("code",null,"getFile(name)")),"\u2013 Retrieve contents of a Pure module file.",i.createElement("li",null,i.createElement("code",null,"getFilePath(name)")),"\u2013 Return full path to a Pure file."),i.createElement(p.A,{heading:"Installing Pure with Composer"}),i.createElement("p",null,"You can also install Pure with ",i.createElement("a",{href:"https://getcomposer.org/"},"Composer"),"."),i.createElement(m.A,null,"$ composer require pure-css/pure"),i.createElement(p.A,{heading:"Extending Pure with Grunt"}),i.createElement("p",null,"We've written several tools that help you extend Pure and integrate it with your project's CSS. These tools are available as ",i.createElement("b",null,i.createElement("a",{href:"http://gruntjs.com"},"Grunt"))," plugins that can easily be integrated into your existing ",i.createElement("code",null,"Gruntfile.js"),"."),i.createElement("aside",null,i.createElement("p",null,"If you haven't used Grunt before, it's very easy to set up. Just head over to the ",i.createElement("a",{href:"http://gruntjs.com/getting-started"},"Getting Started")," page to learn more.")),i.createElement(p.A,{heading:"Extending Pure with Rework"}),i.createElement("p",null,"We've taken a layered approach to developing Pure's tooling. Most of the tools are first built as ",i.createElement("b",null,i.createElement("a",{href:"https://github.com/reworkcss/rework"},"Rework"))," plugins. This allows you to compose Pure's Rework plugins together with other Rework plugins. It also allows the Grunt plugins to be written as ",i.createElement("em",null,"very thin")," wrappers."),i.createElement(p.A,{heading:"Generating Custom Responsive Grids"}),i.createElement("p",null,"Pure was created to help developer's build mobile-first responsive web projects. However, since CSS Media Queries cannot be over-written via CSS, you can use Pure's tooling to customize Pure's Responsive Grids for your project."),i.createElement("h3",null,"Via Grunt"),i.createElement("p",null,"Install the ",i.createElement("a",{href:"https://www.npmjs.org/package/grunt-pure-grids"},"Pure Grids Grunt Plugin")," through npm."),i.createElement(m.A,null,"$ npm install grunt-pure-grids --save-dev"),i.createElement("p",null,"Next, add it to your ",i.createElement("code",null,"Gruntfile.js"),"."),i.createElement(m.A,null,"grunt.loadNpmTasks('grunt-pure-grids');"),i.createElement("p",null,"Finally, add the necessary configuration through the ",i.createElement("code",null,"pure_grids")," task. To see a full list of all configurable properties, check out the ",i.createElement("a",{href:"https://www.npmjs.org/package/grunt-pure-grids#readme"},"README documentation"),"."),i.createElement(m.A,null,(0,h.dx)(r||(r=(0,a.A)(["\n                    grunt.initConfig({\n                        pure_grids: {\n                            dest : \"build/public/css/main-grid.css\",\n                            options: {\n                                units: 12, // 12-column grid\n                                mediaQueries: {\n                                    sm: 'screen and (min-width: 35.5em)', // 568px\n                                    md: 'screen and (min-width: 48em)',   // 768px\n                                    lg: 'screen and (min-width: 64em)',   // 1024px\n                                    xl: 'screen and (min-width: 80em)',   // 1280px\n                                    xxl: 'screen and (min-width: 120em)',  // 1920px\n                                    xxxl: 'screen and (min-width: 160em)',  // 2560px                                    \n                                    x4k: 'screen and (min-width: 240em)'  // 3840px                                    \n                                }\n                            }\n                        }\n                    });\n                "])))),i.createElement("h3",null,"Via Rework"),i.createElement("p",null,"If you're not using Grunt, you can also generate your custom responsive grids through using the ",i.createElement("a",{href:"https://www.npmjs.org/package/rework-pure-grids"},"Pure Grids Rework Plugin"),". It has the same configuration options as the Grunt plugin \u2014 in fact, this is what powers the Grunt plugin."),i.createElement("p",null,"You can install the Rework plugin through npm."),i.createElement(m.A,null,"$ npm install rework rework-pure-grids"),i.createElement("p",null,"And it can be used on it's own like this, or along side other Rework plugins you might be using."),i.createElement(m.A,null,(0,h.dx)(l||(l=(0,a.A)(["\n                    import rework from 'rework';\n                    import pureGrids from 'rework-pure-grids';\n\n                    const css = rework('').use(pureGrids.units({\n                        mediaQueries: {\n                            sm: 'screen and (min-width: 35.5em)', // 568px\n                            md: 'screen and (min-width: 48em)',   // 768px\n                            lg: 'screen and (min-width: 64em)',   // 1024px\n                            xl: 'screen and (min-width: 80em)',   // 1280px\n                            xxl: 'screen and (min-width: 120em)',  // 1920px\n                            xxxl: 'screen and (min-width: 160em)'  // 2560px\n                            x4k: 'screen and (min-width: 240em)'  // 3840px\n                        }\n                    })).toString();\n\n                    // This will log-out the grid CSS.\n                    console.log(css);\n                "])))),i.createElement(p.A,{heading:"Mutating Selectors"}),i.createElement("p",null,"All selectors defined in Pure's source code begin with the ",i.createElement("code",null,".pure-")," prefix. However, you may want to change this. To accomplish this task, you can use Pure's tooling to mutate CSS selectors."),i.createElement("h3",null,"Via Grunt"),i.createElement("p",null,"Install the ",i.createElement("a",{href:"https://www.npmjs.org/package/grunt-css-selectors"},"CSS Selectors Grunt Plugin")," through npm."),i.createElement(m.A,null,"$ npm install grunt-css-selectors --save-dev"),i.createElement("p",null,"Once it's installed, add the task to your ",i.createElement("code",null,"Gruntfile.js")),i.createElement(m.A,null,"grunt.loadNpmTasks('grunt-css-selectors');"),i.createElement("p",null,"Finally, add the necessary configuration through the ",i.createElement("code",null,"css_selectors")," task. Check out the ",i.createElement("a",{href:"https://www.npmjs.org/package/grunt-css-selectors#readme"},"README documentation")," for more details."),i.createElement(m.A,null,(0,h.dx)(s||(s=(0,a.A)(["\n                    grunt.initConfig({\n                        css_selectors: {\n                            options: {\n                                mutations: [\n                                    {prefix: '.foo'}\n                                ]\n                            },\n                            files: {\n                                'dest/foo-prefixed.css': ['src/foo.css'],\n                            }\n                        }\n                    });\n                "])))),i.createElement("h3",null,"Via Rework"),i.createElement("p",null,"If you're not using Grunt, you can also mutate CSS selectors using the ",i.createElement("a",{href:"https://www.npmjs.org/package/rework-mutate-selectors"},"Mutate Selectors Rework Plugin"),". It has a similar interface to the Grunt plugin \u2014 in fact, this is what powers the Grunt plugin."),i.createElement("p",null,"You can install the Rework plugin through npm."),i.createElement(m.A,null,"$ npm install rework rework-mutate-selectors"),i.createElement("p",null,"And it can be used on it's own like this, or along side other Rework plugins you might be using."),i.createElement(m.A,null,(0,h.dx)(o||(o=(0,a.A)(["\n                    import rework from 'rework';\n                    import selectors from 'rework-mutate-selectors';\n\n                    const css = rework(inputCSS)\n                        .use(selectors.prefix('.foo'))\n                        .use(selectors.replace(/^.pure/g, '.bar'))\n                        .toString();\n\n                    // This will log-out the resulting CSS.\n                    console.log(css);\n                "],["\n                    import rework from 'rework';\n                    import selectors from 'rework-mutate-selectors';\n\n                    const css = rework(inputCSS)\n                        .use(selectors.prefix('.foo'))\n                        .use(selectors.replace(/^\\.pure/g, '.bar'))\n                        .toString();\n\n                    // This will log-out the resulting CSS.\n                    console.log(css);\n                "])))),i.createElement("aside",null,i.createElement("p",null,"If you have questions or run into issues while these tools, please file them on their respective GitHub repositories."))))}}}]);